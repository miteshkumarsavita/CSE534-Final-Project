---------------------------------------------------------
STRUCTURE OF CONFIG FILE
root of the json file will have common config options for both hierarchical (H)
as well as chord based (C) DNS system. Root will also contain two sub-objects "hierarchical", "chord"


---------------------------------------------------------
WHAT TO MEASURE (RECORD)
latency : min, max, mean, std dev
throughput: number of requests processed per second

---------------------------------------------------------
EXPERIMENTS

--defaults-- (if not specified explicitly)
nReq=5000

chordNodes=10

levels=4
e.g. level('www.google.com') = 3; level('mail.cs.stonybrook.edu')=4

subset=1
if subset=1, all domains are considered for request
if subset=f where f is any fraction less than 1, we only consider that fraction of the total domains that we have
for sending requests. This is helpful if we want to see the effect of caching

Note: all experiments will have two variations: one with caching turned off and one with on
Note: all experiments will have a graph with four curves for 4 combs of (H, C) x (caching-off, caching-on)

EXP 1: effect of increasing the levels of domain names:
name: "levels"
level: 2 to 10 step 1

EXP 2: effect of increasing chord Nodes
name: "count-nodes"
chordNodes: 2 to 20 step 1
(note: we should see latency increasing as nChordNodes increases)

EXP 3: effect of caching if some requests are repeated
name: "repeat-request"
subset=0.10 to 0.01 step -0.01




